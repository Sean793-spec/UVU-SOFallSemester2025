Unit 5 
//Function for each math method 
//return values
//1 arg float$input()
//Calculate all arguments 
//return 
//seperate function for every operator 
//sum, diff, mult, div, power, mean, median;


global proc float math_sum(float $input[])
{
    float $result = 0;
    for ($i=0; $i<size($input); $i++)
    {
        $result += $input[$i];
    }
    return $result;
}
global proc float math_diff(float $input[])
{
    float $result = $input[0];
    for ($i=1; $i<size($input); $i++)
    {
        $result -= $input[$i];
    }
    return $result;
}
global proc float math_mult(float $inputs[])
{
float $result = 1;
for ($index = 0; $index < size($inputs); $index++)
{
    $result *= $inputs[$index];
}
return $result;
}
global proc float math_div(float $inputs[])
{
    float $result = $inputs[0];
    for ($index = 1; $index < size($inputs); $index++)
    {
        if ($inputs[$index] !=0)
        {
            $result /= $inputs[$index];
        }
        else 
        {
            error("Division by Zero is not allowed.");
            return 0;
        }
    }
    return $result;
}
global proc float math_mean(float $input[])
    {
    float $sum = math_sum($input);
    $sum/= size($input);
    return $sum;
    }
global proc float math_power(float $inputs[])
{
    float $result = $inputs[0];
    for ($index = 1; $index < size($inputs); $index++)
    {
        for ($i = 1; $i < $inputs[$index]; $i++)
        {
            $result *= $result;
        }
    }
    return $result;
}
global proc float math_median( float $input[]){
int $size = size ($input);
float $sorted [] = `sort $input`;

if ($size % 2 == 0){
    return ($sorted[$size/2 -1] + $sorted[$size/2]);
}
else
{
    return $sorted[($size/2)];
}
}

global proc Calculator(string $funct, float $arry[])
{
string $NumHolder = "";
if($funct == "Sum")
{
    for($i=0; $i<size($arry); $i++)
    {
         $NumHolder += $arry[$i];
       if ($i < size($arry) -1 )
      {
        $NumHolder += " + ";
      } 
    }
     print ("Sum of " + $NumHolder + " = " + math_sum($arry)  +"." +"\n");
}
else if ($funct == "Diff")
{
for ($i=0; $i<size($arry); $i++)
{
      $NumHolder += $arry[$i];
      if ($i < size($arry) -1 )
      {
        $NumHolder += " - ";
      }
}
print ("Difference of " + $NumHolder + " = " + math_diff($arry) +"." +"\n");
}
else if ($funct == "Mult")
{
    for ($i=0; $i<size($arry); $i++)
    {
        $NumHolder += $arry[$i];
       if ($i < size($arry) -1 )
      {
        $NumHolder += " * ";
      } 
    }
print ("Mult of " + $NumHolder + " = " + math_mult($arry)  +"." + "\n");
}
else if ($funct == "Div")
{
      for ($i=0; $i<size($arry); $i++)
    {
        $NumHolder += $arry[$i];
       if ($i < size($arry) -1 )
      {
        $NumHolder += " / ";
      } 
    }
    print ("The Division  " + $NumHolder + " = " + math_div($arry)  +"." +"\n");
}
else if ($funct == "Median")
{
      for ($i=0; $i<size($arry); $i++)
    {
        $NumHolder += $arry[$i];
       if ($i < size($arry) -1 )
      {
        $NumHolder += ", ";
      } 
    }
print ("The Median of " + $NumHolder +" = " + math_median($arry)  +"."+ "\n");
}
else if ($funct == "Mean")
{
      for ($i=0; $i<size($arry); $i++)
    {
        $NumHolder += $arry[$i];
       if ($i < size($arry) -1 )
      {
        $NumHolder += " , ";
      } 
    }
print ("The Average of  " + $NumHolder + " = " + math_mean($arry)  +"." + "\n");
}
else if ($funct == "Power")
{
      for ($i=0; $i<size($arry); $i++)
    {
        $NumHolder += $arry[$i];
       if ($i < size($arry) -1 )
      {
        $NumHolder += " ^ ";
      } 
    }
    print ("The result of  " + $NumHolder + " = " + math_power($arry) +"." +"\n");
}
else
{
print("Function not reconized");
}
};


Calculator ("Sum", {5,4,3,2,1});
Calculator ("Diff", {5,4,3,2,1});
Calculator ("Mult", {5,4,3,2,1});
Calculator ("Div", {5,4,3,2,1});
Calculator ("Mean", {5,4,3,2,1});
Calculator ("Median", {5,4,3,2,1});
Calculator ("Power", {5,4,3,2,1});
